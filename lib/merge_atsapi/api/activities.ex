# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MergeATSAPI.Api.Activities do
  @moduledoc """
  API calls for all endpoints tagged `Activities`.
  """

  alias MergeATSAPI.Connection
  import MergeATSAPI.RequestBuilder


  @doc """
  Returns a list of `Activity` objects.

  ## Parameters

  - connection (MergeATSAPI.Connection): Connection to server
  - x_account_token (String.t): Token identifying the end user.
  - opts (KeywordList): [optional] Optional parameters
    - :created_after (DateTime.t): If provided, will only return objects created after this datetime.
    - :created_before (DateTime.t): If provided, will only return objects created before this datetime.
    - :cursor (String.t): The pagination cursor value.
    - :expand (String.t): Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
    - :modified_after (DateTime.t): If provided, will only return objects modified after this datetime.
    - :modified_before (DateTime.t): If provided, will only return objects modified before this datetime.
    - :page_size (integer()): Number of results to return per page.
    - :remote_id (String.t): The API provider's ID for the given object.
    - :user_id (String.t): If provided, will only return activities done by this user.
  ## Returns

  {:ok, %MergeATSAPI.Model.PaginatedActivityList{}} on success
  {:error, info} on failure
  """
  @spec activities_list(Tesla.Env.client, String.t, keyword()) :: {:ok, MergeATSAPI.Model.PaginatedActivityList.t} | {:error, Tesla.Env.t}
  def activities_list(connection, x_account_token, opts \\ []) do
    optional_params = %{
      :"created_after" => :query,
      :"created_before" => :query,
      :"cursor" => :query,
      :"expand" => :query,
      :"modified_after" => :query,
      :"modified_before" => :query,
      :"page_size" => :query,
      :"remote_id" => :query,
      :"user_id" => :query
    }
    %{}
    |> method(:get)
    |> url("/activities")
    |> add_param(:headers, :"X-Account-Token", x_account_token)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %MergeATSAPI.Model.PaginatedActivityList{}}
    ])
  end

  @doc """
  Returns an `Activity` object with the given `id`.

  ## Parameters

  - connection (MergeATSAPI.Connection): Connection to server
  - x_account_token (String.t): Token identifying the end user.
  - id (String.t): 
  - opts (KeywordList): [optional] Optional parameters
    - :expand (String.t): Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
  ## Returns

  {:ok, %MergeATSAPI.Model.Activity{}} on success
  {:error, info} on failure
  """
  @spec activities_retrieve(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, MergeATSAPI.Model.Activity.t} | {:error, Tesla.Env.t}
  def activities_retrieve(connection, x_account_token, id, opts \\ []) do
    optional_params = %{
      :"expand" => :query
    }
    %{}
    |> method(:get)
    |> url("/activities/#{id}")
    |> add_param(:headers, :"X-Account-Token", x_account_token)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %MergeATSAPI.Model.Activity{}}
    ])
  end
end
